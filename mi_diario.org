#+STARTUP: indent
* Mi diario en ORG-mode
:properties:
:visibility: children
:end:
** Bash
*** Uso de variables indirectas
#+begin_src sh
    var=x; val=foo
    eval "$var=\$val"

    var=x;x=foo
    echo ${!var}
#+end_src
*** Comando sed
**** Imprimir una línea -> sed '2p' file
*** Parar un script ante un error
- set -e
- set -o errexit
Ambos son equivalentes, con 'set +e' el script no para.
*** Encabezado
#+BEGIN_SRC 
#!/bin/bash
# -*- encoding: utf-8 -*-

###################################################################
#Script Name: Nombre
#Description: Descripción
#Args: N/A
#Creation/Update: 20191022/20191129
#Author: www.sherblog.pro                                                
#Email: sherlockes@gmail.com                                           
###################################################################
#+END_SRC
*** Rclone
**** Montar una carpeta > rclone mount ruta_remota: ruta_local --daemon
*** Grabar imagen en pendrive o sd
#+BEGIN_SRC sh
    # localizar la imagen y descomprimirla
    unzip loquesea.zip
    # localizar la unidad del pendrive
    df -h
    # desmontar la unidad (o varias...)
    umount /dev/sdb1
    umount /dev/sdb2
    # grabar el pendrive
    sudo dd bs=1M if=loquesea.img of=dev/sdb status=progress
#+END_SRC
*** Curl
**** Descargar un archivo > curl 'dirección' -o archivo
*** Comentarios
**** Multilínea -> : '  -------- '
*** Regex
**** Uso de variable en una expresión regular -> ${var
*** Listar y Matar un proceso (ps - Kill)
**** Listar procesos (ps -aux)
- e = muestra todos los procesos
- f = formato extra completo
- a = mostrar procesos para todos los usuarios.
- u = muestra el usuario propietario del proceso.
- x = también muestra procesos no conectados a terminal.
**** Matar procesos (kill -9 pid)
- -1 cuelga las llamadas al proceso
- -9 mata literalmente el proceso
- -15 termina el proceso
** Debian
*** Instalar la compatibilidad para impresión a PDF
#+begin_src sh
    apt-get -y install cups
    apt-get -y install printer-driver-cups-pdf
#+end_src
** Docker
*** Parar un contenedor - docker stop xxxxxxxxx
*** Parar todos contenedores - docker stop `docker ps -q`
*** Listar todos contenedores - docker ps
*** Instalación
#+BEGIN_SRC bash
curl -fsSL https://get.docker.com -o get-docker.sh
chmod u+x get-docker.sh
sudo ./get-docker.sh
sudo usermod -aG docker $(whoami)
#+END_SRC
** Emacs
*** Buffers
**** Borrar el buffer completo -> erase-buffer (Sin tecla por defecto)
**** Cuardar como (buffer) -> C-x C-w [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Save-Commands.html][Link]]
**** Guardar como (todo el texto) -> C-x h M-x write-region
**** Instalar paquete -> install-package-from-buffer
**** Mostrar los números de línea -> linum-mode
**** Recargar archivo (revert-buffer) -> C-x C-v Ret
**** Seleccionar el buffer completo -> C-x h
*** Corrección Ortográfica y Diccionario
**** Cambiar diccionario -> M-x ispell-change dictionary "castellano"
**** Instalar diccionario -> [[https://ondahostil.wordpress.com/2017/01/17/lo-que-he-aprendido-configurando-aspell-para-emacs/][Onda Hostil]]
- Descargarlo de [[ftp://ftp.gnu.org/gnu/aspell/dict/][GNU-Aspell]]
- Descomprimirlo
- Ejecutar lo siguiente desde la carpeta descomprimida
#+BEGIN_SRC 
./configure
make
sudo make install
make clean
#+END_SRC
**** Corregir el buffer -> M-x ispell-minor-mode
**** Subrayado -> M-x flyspell-mode
*** Edición
**** Sangrar varias líneas 8 -> C-u 8 C-x Tab
**** Reemplazar ^M por un salto de línea > M-x replace-string C-q C-m RET RET
**** Seleccionar todo -> C-x h
**** Editar archivos svg en modo texto > C-c C-c (auto-image-file-mode 1)
**** Borrar una línea -> C-S-Backspace
**** insertar un trozo de código -> <sTAB
*** MarkDown Mode
**** Insertar encabezado -> C-c C-s
*** Navegación
**** Abrir un directorio remoto ssh C-x d /user@host:folder
**** Ir al principio/final del Buffer -> M-</>
**** Marcar línea al anillo (Ir de un punto a otro del archivo)
- Marcar linea C-c % (org-mark-ring-push)
- Ir a línea C-c & (org-mark-ring-goto)
**** Dired
***** [[https://www.gnu.org/software/emacs/refcards/pdf/dired-ref.pdf][Dired Reference Card]]
***** Buscar archivos en directorio -> % m
***** Directorio superior -> ^
***** Cambiar opciones ls -> C-u s
***** Ocultar detalles de archivos (dired-hide-details-mode) -> (
***** Nueva subcarpeta -> +
***** Refrescar -> g
***** Crear enlace simbólico -> S
***** Grep en DIRED (buscar en archivos) -> find-grep-dired
***** Ordenar -> dired-listing-switches [[https://oremacs.com/2015/01/13/dired-options/][Oremacs]]
***** Renombrar -> C-x C-q (C-c C-c para terminar)
*** Paquetes
**** Instalar paquete desde archivo -> package-install-file
**** Yasnippet
***** Nuevo Snippet -> yas-new-snippet
***** Editar Snippet -> yas-visit-snippet-file
*** Recuperar archivos -> m-x recover-file
*** Selección
**** Activar la marca de posición -> C-spc
*** Shell
**** Abrir la consola de comandos -> M-x shell
**** Comando anterior -> M-p
**** Ejecutar un archivo -> C-c C-x
**** Abrir la terminal -> M-x shell
**** Terminar la ejecución -> C-c C-c
**** Ejecutar comando anterior -> M-p
*** Temas
**** Cambiar el tema -> M-x customize-themes
*** Yasnippet
**** Ver snippets de un tipo de archivo -> Alt+x yas-describe-tables
*** Ventanas
**** Eliminar la ventana actual -> C-x 0
**** Eliminar el resto de ventanas -> C-x 1
**** División horizontal -> C-x 2
**** División vertical -> C-x 3
**** Cambio de ventanas con Ace-window
- Instalar "ace-window" desde el repositorio de Melpa.
- Añadir la línea "(global-set-key (kbd "M-o") 'ace-window)" al archivo de configuración.
- Cambiar de ventana mediante M-o y el número que se deseb
** Elisp
*** Variable global -> (setq variable valor)
*** Escribir a un archivo -> (write-region "loquesea" nil "~/archivo")
*** Añadir a un archivo -> (append-to-file "loquesea" nil "~/archivo")
** Hugo
*** Crear un enlace interno 
- En el mismo directorio > [Titulo]({{<relref"archivo.md">}})
- En un directorio absoluto > [Titulo]({{<ref"/dir/archivo.md">}})
- A un apartado del post >[Foo]({{<ref "#foo" >}}) 
*** [[https://sourceforge.net/p/hugo-generator/wiki/markdown_syntax/][Markdown Cheatsheet]]
*** Crear un trozo en borrador
#+BEGIN_SRC 
{{< borrador >}}
Aquí iremos añadiendo el contenido con el que queremos actualizar la entrada...
{{< / borrador >}}
#+END_SRC
*** Escapar shortcode para no evaluarlo -> {{</* youtube w7iekruei7 */>}}
*** Insertar un comentario en plantilla -> {{/* This is my comment */}}
*** Insertar tag "more" -> <!--more-->
*** Insertar un video de youtube -> {{< youtube w7Ft2ymGmfc >}} 
** Inkscape
*** Resetear las preferencias
Borrar el archivo "~/.config/inkscape/preferences.xml"
** Linux
*** Buscar packetes instalados -> apt list --installed nombre
*** Capturas de pantalla (Atajos de teclado)
- Ctrl (Portapapeles) Alt (Ventana) Mays (area)
- Escritorio al portapapeles - Ctrl+ImprPant
- Area al portapapeles - Ctrl+Mays+ImprPant
- Ventana al portapapeles - Ctrl+Alt+ImprPant
- Guardar escritorio en directorio - ImprPant
- Guardar Area en directorio - Mays+ImprPant
- Guardar ventana en directorio - Alt+ImprPant.
*** nmap
**** MAC a partir de IP -> sudo nmap -sP -n 192.168.1.200
** Linux Mint
*** Cambio entre áreas de trabajo -> Ctrl+Alt+⬆️
*** Cambio entre aplicaciones utilizando el efecto de exposición -> Ctrl+Alt+⬇️
*** Siguiente area de trabajo -> Ctrl+Alt+➡️
*** Anterior area de trabajo -> Ctrl+Alt+⬅
*** Mueve la aplicación al siguiente area de trabajo -> Ctrl+Alt+Mayusc+➡️
*** Mueve la aplicación al antgerior area de trabajo -> Ctrl+Alt+Mayusc+⬅️
*** Alt+espacio -> Abre el menú ventana
*** Instalar Emacs 26.3
[[https://ubunlog.com/llega-la-tercera-version-de-la-rama-26-de-emacs-gnu-emacs-26-3/#Como_instalar_Gnu_Emacs_263_en_Ubuntu_y_derivados][Enlace]]
sudo add-apt-repository ppa:kelleyk/emacs -y
sudo apt-get update
sudo apt-get install emacs26
** MarkDown
*** [[https://sourceforge.net/p/hugo-generator/wiki/markdown_syntax/#md_ex_lists][Hugo CheatSheet]]
*** [[https://cheatography.com/xaon/cheat-sheets/emacs-markdown-mode/][Emacs CheatSheet]]
** ORG-mode
*** Insertar un enlace -> C-c C-l
*** Insertar un nuevo nodo -> C-Ret
*** Insertar un bloque de código -> <s TAB
*** Insertar un tag -> C-c C-q (C-c C-c)
*** Insertar una cita -> <q TAB
*** Easy templates (plantillas sencillas) <s Tab [[https://www.gnu.org/software/emacs/manual/html_node/org/Easy-templates.html][Link]]
**** Modificar las plantillas editando org-structure-template-alist
*** Visualización inicial --> C-u C-u TAB
*** [[https://niklasfasching.github.io/go-org/][Niklasfasching Org mode parser]]
** Python
*** Enlaces pendientes de revisar
Tutorial automate the boring stuff
https://automatetheboringstuff.com/chapter1/
Programación orientada a objetos https://towardsdatascience.com/python-oop-corey-schafer-datacamp-be6b0b3cafc6
Programación funcional
https://morioh.com/p/8a40c3345286

*** Python en Emacs
**** Guardar y ejecutar  >   C-c C-c
**** Limpiar el shell    >   C-c M-o
*** Pandas
import pandas as pd
Cargar csv -> datos = pd.read_csv(ruta/archivo.csv)
Revisar datos -> datos.describe()
Listar campos -> datos.columns
Columna a variable -> y = datos.lacolumnaquesea
Columnas a dataframe -> x = datos[listadecolumnas]
Mostrar primeras filas de dataframe -> x.head()
Eliminar filas con campos vacíos -> filtered_x = x.dropna(axis=0)
** Raspberry
*** Argon One Pi4 V2 (Caja Raspberry Pi)
**** Jumper pin settings
- Pin 1-2: Modo por defecto, hay que pulsar el botón "ON" para encender
- Pin 2-3: Modo siempre on, no hay que pulsar para encender
- Argon ONE Pi 4 script 'curl https://download.argon40.com/argon1.sh|bash'
- Configurar utilidad 'argonone-config'
- Desinstalar utilidad 'argonone-uninstall'
** Machine Learning
*** DecisionTreeRegressor
**** Especificar y ajustar
#+BEGIN_SRC python
from sklearn.tree import DecisionTreeRegressor
modelo = DecisionTreeRegressor(max_leaf_nodes=nodos, random_state=1)
modelo.fit(X,y)
#+END_SRC
#+BEGIN_QUOTE
modelo es el nombre asignado
X es el dataframe con las columnas de entrada
y es la columna con los resultados que esperamos obtener.
#+END_QUOTE
**** Predicciones
#+BEGIN_SRC python
predicciones = modelo.predict(X)
#+END_SRC
**** Cuantificar error
#+BEGIN_SRC python
from sklearn.metrics import mean_absolute_error
predicciones_modelo = modelo.predict(X)
error = mean_absolute_error(y, predicciones_modelo)
#+END_SRC
Partir datos de entrada entre entrenamiento y validación
#+BEGIN_SRC python
from sklearn.model_selection import train_test_split
train_X, val_X, train_y, val_y = train_test_split(X, y, random_state = 0)
#+END_SRC
*** RandomForestRegressor
#+BEGIN_SRC python
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error
forest_model = RandomForestRegressor(random_state=1)
forest_model.fit(train_X, train_y)
melb_preds = forest_model.predict(val_X)
print(mean_absolute_error(val_y, melb_preds))
#+END_SRC
** MoodleBox
*** Acceder a través de ssh -> [[https://moodlebox.net/en/help/command-line-connection/][Enlace]]
*** Acceder desde internet -> [[https://moodlebox.net/en/help/access-from-internet/][Enlace]]
** Atajos
*** Navegador
**** Mandar el foco a la barra de direcciones > C-l
**** Mover a la pestaña anterior (Temporal) > C-Shift-Tab
**** Mover a la pestaña posterior (Temporal) > C-Tab
**** Mover a la pestaña anterior (Izquierda) > C-RePag
**** Mover a la pestaña posterior (Derecha) > C-AvPag
*** General
**** Seleccionar todo > C-a
*** Vscode
**** Enfocar la pantalla de terminal > Ctrl +j
**** Cambiar de pestaña > Ctrl + TAB
**** Comentar un bloque de código > Ctrl + Mays + a
* Temp
** Links
https://www.linuxquestions.org/questions/blog/lumak-426618/having-fun-with-bash-varaibles-indirect-variable-references-2450/

http://mywiki.wooledge.org/BashFAQ/006#How_can_I_use_variable_variables_.28indirect_variables.2C_pointers.2C_references.29_or_associative_arrays.3F

https://codeday.me/es/qa/20190211/180474.html
